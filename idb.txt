  /*const dbPromise = idb.open('restuarant_app_db', 4, function(db) {
    switch (db.oldVersion) {
      case 0: {
        const keyvalStore = db.createObjectStore('keyval');
        keyvalStore.put('value is value', 'key');
      }

      // name is the primary key
      case 1: {
        // eslint-disable-line
        db.createObjectStore('people', { keyPath: 'name' });
      }

      // create index 'favoriteAnimal'
      case 2: {
        // eslint-disable-line
        const peopleStore = db.transaction.objectStore('people');
        peopleStore.createIndex('animal', 'favoriteAnimal'); // named index as 'animal'
      }

      case 3: {
        // eslint-disable-line
        const peopleStore = db.transaction.objectStore('people');
        peopleStore.createIndex('age', 'age');
      }
    }
  });

  dbPromise.then(db => {
    const tx = db.transaction('people', 'readwrite');
    const peopleStore = tx.objectStore('people');
    peopleStore.put({
      name: 'Sam Munoz',
      age: 25,
      favoriteAnimal: 'dog'
    });

    peopleStore.put({
      name: 'Wam ok',
      age: 34,
      favoriteAnimal: 'cat'
    });

    peopleStore.put({
      name: 'Kim Bad',
      age: 35,
      favoriteAnimal: 'dog'
    });

    peopleStore.put({
      name: 'Jam Good',
      age: 21,
      favoriteAnimal: 'dog'
    });

    return tx.complete;
  });

  dbPromise.then(db => {
    const tx = db.transaction('people');
    const peopleStore = tx.objectStore('people');
    const animalIndex = peopleStore.index('animal');

    return animalIndex.getAll('dog');
    // return animalIndex.getAll();
    // return peopleStore.getAll();
  });

  dbPromise
    .then(db => {
      const tx = db.transaction('people');
      const peopleStore = tx.objectStore('people');
      const ageIndex = peopleStore.index('age');

      return ageIndex.openCursor();
    })
    .then(cursor => {
      if (!cursor) return;
      // Skip first two
      return cursor.advance(2);
    })
    .then(function logPerson(cursor) {
      if (!cursor) return;
      // loop each one get value out ot it
      // console.log("Cursor at: ", cursor.value.name);
      // continue looping
      return cursor.continue().then(logPerson);
    });

  dbPromise.then(db => {
    const tx = db.transaction('keyval');
    const keyvalStore = tx.objectStore('keyval');
    return keyvalStore.get('key');
  });

  dbPromise.then(db => {
    const tx = db.transaction('keyval', 'readwrite');
    const keyvalStore = tx.objectStore('keyval');
    keyvalStore.put('barValue', 'fooKey');
    return tx.complete;
  });*/